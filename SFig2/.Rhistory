barplot(seq(5))
barplot(seq(5),xlim=c(-1,6))
seq(2)+c(2,4)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "lightblue", adj = 0.2)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "lightblue", adj = 0.8)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "lightblue", adj = 0)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "lightblue", adj = 0.2)
?legend
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "lightblue", adj = 0.2,angle = 45)
?legend
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "lightblue", adj = 0.2,angle = 45)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "white", adj = 0.2,angle = 45)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "white", border="", adj = 0.2,angle = 45)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "white", border="white", adj = 0.2,angle = 45)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "lightblue", bg = "white", border="white", adj = 0)
plot(x = runif(1000), y = runif(1000), type = "p", pch = 16, col = "#40404050")
legend(0.4, 0.5, "Some text", box.col = "white", bg = "white", border="white", adj = 0)
a <- c("YujieChen","YimanWang","WenchaoXiu","WenWang","HuiYang","ZhaoweiYu","YujieChen","WenWang","ZhaoweiYu","ZhiweiSong","YimanWang","YuweiHua","YujieChen","MinDing","XiangxiuWang","XiaolanChen","ChengchenZhao","ZhiweiSong","WenWang","YuweiHua","YujieChen","ZhaoweiYu","ShiyangZeng","YuweiHua","XiangxiuWang","XiaolanChen","XiaolanChen","ZhiweiSong","YimanWang","WenWang","HuiYang","YanhongXiong","ChengchenZhao","XiaolanChen","ChengchenZhao","WenWang","WenWang","XiaolanChen","WenWang","XiangxiuWang","ZhaoweiYu","GuifenLiu","WenchaoXiu","YanhongXiong","WenWang","ChengchenZhao","YujieChen","YanhongXiong","ShiyangZeng","YujieChen","GuifenLiu","XiangxiuWang","ChengchenZhao","YanhongXiong","YanhongXiong","WenWang","YanhongXiong","XiaolanChen","ChengchenZhao","YuweiHua","JiaChen","HuiYang","HuiYang","YuweiHua","XiaolanChen","HuiYang","YanhongXiong","YuweiHua","WenWang","YanhongXiong","GuifenLiu","ChengchenZhao","XiangxiuWang","YujieChen","YuweiHua","JingXu","XiangxiuWang","WenchaoXiu","XiangxiuWang","WenWang","TursunNurmamat","WenchaoXiu","GuifenLiu","MinDing","GuifenLiu","XiaolanChen","ShiyangZeng","XiaolanChen","HuiYang","YujieChen","ChengchenZhao","YanhongXiong","GuifenLiu","XiaolanChen")
a
table(a)
barplot(table(a))
b=table(a)
sort(b)
barplot(sort(b,decreasing = T),las=2)
pdf("JC_2019.pdf",height=5,width=5)
par(mar=c(6,4,2,2))
barplot(sort(b,decreasing = T),las=2)
dev.off()
pdf("JC_2019.pdf",height=5,width=5)
par(mar=c(8,4,2,2))
barplot(sort(b,decreasing = T),las=2)
dev.off()
pdf("JC_2019.pdf",height=5,width=5)
par(mar=c(8,4,4,2))
barplot(sort(b,decreasing = T),las=2,main="JC_2019",ylim=c(1,12))
dev.off()
pdf("JC_2019.pdf",height=5,width=5)
par(mar=c(8,4,4,2))
barplot(sort(b,decreasing = T),las=2,main="JC_2019",ylim=c(1,12),ylab="Count")
dev.off()
pdf("JC_2019.pdf",height=5,width=5)
par(mar=c(8,4,3,2))
barplot(sort(b,decreasing = T),las=2,main="JC_2019",ylim=c(1,12),ylab="Count")
dev.off()
pdf("JC_2019.pdf",height=5,width=5)
par(mar=c(8,4,4,2),mgp=c(2.5,1,0))
barplot(sort(b,decreasing = T),las=2,main="JC_2019",ylim=c(1,12),ylab="Count")
dev.off()
pdf("JC_2019.pdf",height=7,width=5)
par(mar=c(8,4,4,2),mgp=c(2.5,1,0))
barplot(sort(b,decreasing = T),las=2,main="JC_2019",ylim=c(1,12),ylab="Count")
dev.off()
pdf("JC_2019.pdf",height=7,width=5)
par(mar=c(8,4,4,2),mgp=c(2.5,1,0))
barplot(sort(b,decreasing = T),las=2,main="JC_2019",ylim=c(0,12),ylab="Count")
dev.off()
image(2,2)
image(seq(2),seq(2),matrix(rep(1,4),2))
image(seq(2),seq(2),matrix(rep(1,4),2),col=seq(4))
image(seq(2),seq(2),matrix(seq(1,4),2),col=seq(4))
matrix(seq(6),c(2,3))
Turquoise <- c("#e8f8f5","#d1f2eb","#a3e4d7","#76d7c4","#48c9b0","#1abc9c","#17a589","#148f77","#117864","#0e6251")
GreenSea <- c("#e8f6f3","#d0ece7","#a2d9ce","#73c6b6","#45b39d","#16a085","#138d75","#117a65","#0e6655","#0b5345")
Emerald <- c("#eafaf1","#d5f5e3","#abebc6","#82e0aa","#58d68d","#2ecc71","#28b463","#239b56","#1d8348","#186a3b")
Nephritis <- c("#e9f7ef","#d4efdf","#a9dfbf","#7dcea0","#52be80","#27ae60","#229954","#1e8449","#196f3d","#145a32")
PeterRiver <- c("#ebf5fb","#d6eaf8","#aed6f1","#85c1e9","#5dade2","#3498db","#2e86c1","#2874a6","#21618c","#1b4f72")
BelizeHole <- c("#eaf2f8","#d4e6f1","#a9cce3","#7fb3d5","#5499c7","#2980b9","#2471a3","#1f618d","#1a5276","#154360")
Amethyst <- c("#f5eef8","#ebdef0","#d7bde2","#c39bd3","#af7ac5","#9b59b6","#884ea0","#76448a","#633974","#512e5f")
Wisteria <- c("#f4ecf7","#e8daef","#d2b4de","#bb8fce","#a569bd","#8e44ad","#7d3c98","#6c3483","#5b2c6f","#4a235a")
WetAsphalt <- c("#ebedef","#d6dbdf","#aeb6bf","#85929e","#5d6d7e","#34495e","#2e4053","#283747","#212f3c","#1b2631")
MidnightBlue <- c("#eaecee","#d5d8dc","#abb2b9","#808b96","#566573","#2c3e50","#273746","#212f3d","#1c2833","#17202a")
Sunflower <- c("#fef9e7","#fcf3cf","#f9e79f","#f7dc6f","#f4d03f","#f1c40f","#d4ac0d","#b7950b","#9a7d0a","#7d6608")
Orange <- c("#fef5e7","#fdebd0","#fad7a0","#f8c471","#f5b041","#f39c12","#d68910","#b9770e","#9c640c","#7e5109")
Carrot <- c("#fdf2e9","#fae5d3","#f5cba7","#f0b27a","#eb984e","#e67e22","#ca6f1e","#af601a","#935116","#784212")
Pumpkin <- c("#fbeee6","#f6ddcc","#edbb99","#e59866","#dc7633","#d35400","#ba4a00","#a04000","#873600","#6e2c00")
Alizarin <- c("#fdedec","#fadbd8","#f5b7b1","#f1948a","#ec7063","#e74c3c","#cb4335","#b03a2e","#943126","#78281f")
Pomegranate <- c("#f9ebea","#f2d7d5","#e6b0aa","#d98880","#cd6155","#c0392b","#a93226","#922b21","#7b241c","#641e16")
Clouds <- c("#fdfefe","#fbfcfc","#f7f9f9","#f4f6f7","#f0f3f4","#ecf0f1","#d0d3d4","#b3b6b7","#979a9a","#7b7d7d")
Silver <- c("#f8f9f9","#f2f3f4","#e5e7e9","#d7dbdd","#cacfd2","#bdc3c7","#a6acaf","#909497","#797d7f","#626567")
Concrete <- c("#f4f6f6","#eaeded","#d5dbdb","#bfc9ca","#aab7b8","#95a5a6","#839192","#717d7e","#5f6a6a","#4d5656")
Asbestos <- c("#f2f4f4","#e5e8e8","#ccd1d1","#b2babb","#99a3a4","#7f8c8d","#707b7c","#616a6b","#515a5a","#424949")
plot_col <- rbind(Turquoise,GreenSea,Emerald,Nephritis,PeterRiver,BelizeHole,Amethyst,Wisteria,WetAsphalt,MidnightBlue,Sunflower,Orange,Carrot,Pumpkin,Alizarin,Pomegranate,Clouds,Silver,Concrete,Asbestos)
plot_matrix <- matrix(seq(ncol(plot_col)*nrow(plot_col)),c(nrow(plot_col),ncol(plot_col),byrow=T)
)
plot_matrix <- matrix(seq(ncol(plot_col)*nrow(plot_col)),c(nrow(plot_col),ncol(plot_col)),byrow=T)
plot_matrix
plot_col <- rbind(Turquoise,GreenSea,Emerald,Nephritis,PeterRiver,BelizeHole,Amethyst,Wisteria,WetAsphalt,MidnightBlue,Sunflower,Orange,Carrot,Pumpkin,Alizarin,Pomegranate,Clouds,Silver,Concrete,Asbestos)
plot_matrix <- matrix(seq(ncol(plot_col)*nrow(plot_col)),c(nrow(plot_col),ncol(plot_col)),byrow=T)
image(seq(nrow(plot_matrix)), seq(ncol(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
image(seq(nrow(plot_matrix)), seq(ncol(plot_matrix)), plot_matrix, xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
image(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
plot_matrix
plot_col
plot_col <- c(Turquoise,GreenSea,Emerald,Nephritis,PeterRiver,BelizeHole,Amethyst,Wisteria,WetAsphalt,MidnightBlue,Sunflower,Orange,Carrot,Pumpkin,Alizarin,Pomegranate,Clouds,Silver,Concrete,Asbestos)
image(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
text(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix))
text(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_col))
plot_matrix
seq(ncol(plot_matrix))
text(matrix(rep(seq(ncol(plot_matrix)),nrow(plot_matrix)),c(nrow(plot_col),ncol(plot_col)),byrow=T), t(plot_col))
plot_matrix <- matrix(seq(20)*10),c(10,20)),byrow=T)
plot_matrix <- matrix(seq(20)*10,c(10,20)),byrow=T)
plot_matrix <- matrix(seq(20*10,c(10,20)),byrow=T)
plot_matrix <- matrix(seq(20*10),c(10,20)),byrow=T)
plot_matrix <- matrix(seq(20*10),c(10,20),byrow=T)
plot_matrix
plot_matrix <- matrix(seq(20*10),c(20,10),byrow=T)
plot_matrix
image(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
matrix(rep(seq(ncol(plot_matrix)),nrow(plot_matrix)),c(nrow(plot_matrix),ncol(plot_matrix))
)
matrix(rep(seq(10),20),c(20,10),byrow=T)
matrix(rep(seq(20),10),c(20,10),byrow=F)
text(matrix(rep(seq(10),20),c(20,10),byrow=T),matrix(rep(seq(20),10),c(20,10),byrow=F), t(plot_col))
axis(side=2,at=seq(20),labels=c("Turquoise","GreenSea","Emerald","Nephritis","PeterRiver","BelizeHole","Amethyst","Wisteria","WetAsphalt","MidnightBlue","Sunflower","Orange","Carrot","Pumpkin","Alizarin","Pomegranate","Clouds","Silver","Concrete","Asbestos"))
axis(side=2,at=seq(20),labels=c("Turquoise","GreenSea","Emerald","Nephritis","PeterRiver","BelizeHole","Amethyst","Wisteria","WetAsphalt","MidnightBlue","Sunflower","Orange","Carrot","Pumpkin","Alizarin","Pomegranate","Clouds","Silver","Concrete","Asbestos"),las=2)
pdf("FlatColorPalette.pdf",height=8,width=8)
par(mar=c(6,6,4,4))
image(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
text(matrix(rep(seq(10),20),c(20,10),byrow=T),matrix(rep(seq(20),10),c(20,10),byrow=F), t(plot_col))
axis(side=2,at=seq(20),labels=c("Turquoise","GreenSea","Emerald","Nephritis","PeterRiver","BelizeHole","Amethyst","Wisteria","WetAsphalt","MidnightBlue","Sunflower","Orange","Carrot","Pumpkin","Alizarin","Pomegranate","Clouds","Silver","Concrete","Asbestos"),las=2)
dev.off()
getwd()
pdf("FlatColorPalette.pdf",height=10,width=10)
par(mar=c(6,6,4,4))
image(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
text(matrix(rep(seq(10),20),c(20,10),byrow=T),matrix(rep(seq(20),10),c(20,10),byrow=F), t(plot_col))
axis(side=2,at=seq(20),labels=c("Turquoise","GreenSea","Emerald","Nephritis","PeterRiver","BelizeHole","Amethyst","Wisteria","WetAsphalt","MidnightBlue","Sunflower","Orange","Carrot","Pumpkin","Alizarin","Pomegranate","Clouds","Silver","Concrete","Asbestos"),las=2)
dev.off()
barplot(seq(10),col=Turquoise)
Turquoise
plot_col
text(matrix(rep(seq(10),20),c(20,10),byrow=T),matrix(rep(seq(20),10),c(20,10),byrow=F), cbind(Turquoise,GreenSea,Emerald,Nephritis,PeterRiver,BelizeHole,Amethyst,Wisteria,WetAsphalt,MidnightBlue,Sunflower,Orange,Carrot,Pumpkin,Alizarin,Pomegranate,Clouds,Silver,Concrete,Asbestos))
pdf("FlatColorPalette.pdf",height=10,width=10)
par(mar=c(6,6,4,4))
image(seq(ncol(plot_matrix)), seq(nrow(plot_matrix)), t(plot_matrix), xaxt="n", yaxt="n", col=plot_col, xlab="", ylab="");box(lwd=2)
text(matrix(rep(seq(10),20),c(20,10),byrow=T),matrix(rep(seq(20),10),c(20,10),byrow=F), t(cbind(Turquoise,GreenSea,Emerald,Nephritis,PeterRiver,BelizeHole,Amethyst,Wisteria,WetAsphalt,MidnightBlue,Sunflower,Orange,Carrot,Pumpkin,Alizarin,Pomegranate,Clouds,Silver,Concrete,Asbestos)))
axis(side=2,at=seq(20),labels=c("Turquoise","GreenSea","Emerald","Nephritis","PeterRiver","BelizeHole","Amethyst","Wisteria","WetAsphalt","MidnightBlue","Sunflower","Orange","Carrot","Pumpkin","Alizarin","Pomegranate","Clouds","Silver","Concrete","Asbestos"),las=2)
dev.off()
###################################################################################################
################################     PARAMETER/FUNCTION DEFINE     ################################
###################################################################################################
# sys_argv <- commandArgs(T)
cccol <- c("#CE0013","#16557A","#C7A609","#87C232","#008792","#A14C94","#15A08C","#8B7E75","#1E7CAF","#EA425F","#46489A","#E50033","#0F231F","#1187CD")
cccol50 <- c("#CE001350","#16557A50","#C7A60950","#87C23250","#00879250","#A14C9450","#15A08C50","#8B7E7550","#1E7CAF50","#EA425F50","#46489A50","#E5003350","#0F231F50","#1187CD50")
options(scipen = 200)
red_col <- colorRampPalette(c(cccol[1],cccol[3]), bias=1)(6)[2:5]
blue_col <- colorRampPalette(c(cccol[2],cccol[4]), bias=1)(6)[2:5]
grey_col <- colorRampPalette(c(cccol[8],"black"), bias=1)(6)[2:5]
library(beeswarm)
ErrorBar <- function(x, y, upper, lower=upper, length=0.03,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length,lwd=2, ...)
}
BeeswarmSiginificancePlot <- function(plot_list,MAIN,NAMES,YLAB,COL,YLIM){
beeswarm(plot_list,xaxt="n",col = COL,pch = 16,method = "swarm",corral = "wrap",main=MAIN,xlab="",ylab=YLAB,ylim=YLIM,las=2);box(lwd=2)
axis(at=seq(length(plot_list)),side=1,labels=NAMES,las=2)
n <- as.numeric(lapply(plot_list,length))
mean <- as.numeric(lapply(plot_list,mean))
sd <- as.numeric(lapply(plot_list,sd))
points(seq(length(plot_list)),mean,type="p",pch=16,col=COL)
ErrorBar(seq(length(plot_list)),mean, qt(0.975, n-1) * sd / sqrt(n),col=COL)
n <- length(plot_list)
xpos <- seq(n)+0.5
p_value <- c()
for (i in seq(n-1)){
tryCatch({p_value <- c(p_value,t.test(plot_list[[i]],plot_list[[i+1]])$p.value)},
error = function(err){p_value <- c(p_value,1)})
}
mark <- symnum(p_value, cutpoints=c(0,0.001,0.01,0.05,1), symbols=c("***","**","*","-"))
ylim <- range(plot_list,na.rm=T)
dist <- (ylim[2]-ylim[1])/20
ypos_1 <- mean[1:n-1]+8*dist
ypos_2 <- mean[2:n]+8*dist
# legend("topleft",c("***:p<0.001","**:p<0.01","*:p<0.05"),text.col="red",bty="n")
if (length(mark)!=0){
for(i in 1:length(mark)){
if(!is.na(mark[i]) & mark[i]!="?"){
segments(xpos[i]-.49, ypos_1[i]+dist/2, xpos[i]-.49, max(ypos_1[i], ypos_2[i])+dist)
segments(xpos[i]+.49, ypos_2[i]+dist/2, xpos[i]+.49, max(ypos_1[i], ypos_2[i])+dist)
segments(xpos[i]-.49, max(ypos_1[i], ypos_2[i])+dist, xpos[i]-0.3, max(ypos_1[i], ypos_2[i])+dist)
segments(xpos[i]+.49, max(ypos_1[i], ypos_2[i])+dist, xpos[i]+0.3, max(ypos_1[i], ypos_2[i])+dist)
text(x=xpos[i], y=max(ypos_1[i], ypos_2[i])+dist, label=mark[i], col="red")
}
}
}
}
Boxplot_List <- function(plot_list,MAIN,NAMES,YLAB,COL,YLIM){
n <- length(plot_list)
xpos <- 0:(n-1)+1.5
p_value <- c()
for (i in seq(n-1)){
tryCatch({p_value <- c(p_value,t.test(plot_list[[i]],plot_list[[i+1]])$p.value)},
error = function(err){p_value <- c(p_value,1)})
}
mark <- symnum(p_value, cutpoints=c(0,0.001,0.01,0.05,1), symbols=c("***","**","*","-"))
bp <- boxplot(plot_list,at=0:(n-1)+1, xlim=c(0.5,n+0.5),outline=F,plot=F)
ylim <- range(bp$stats,na.rm=T)
dist <- (ylim[2]-ylim[1])/20
ylim[2] <- ylim[2]+1*dist
# boxplot(plot_list,at=0:(n-1)+1,boxwex=0.6, xlim=c(0.5,n+0.5),ylim=ylim,col=paste(COL,"50",sep=""),border=COL,outline=F,names=NAMES,main=MAIN,lwd=2,ylab=YLAB,las=2)
boxplot(plot_list,at=0:(n-1)+1,boxwex=0.6, xlim=c(0.5,n+0.5),ylim=YLIM,col=paste(COL,"50",sep=""),border=COL,outline=F,names=NAMES,main=MAIN,lwd=2,ylab=YLAB,las=2)
box(lwd=2)
ypos_1 <- bp$stats[5,][1:n-1]
ypos_2 <- bp$stats[5,][2:n]
# legend("topleft",c("***:p<0.001","**:p<0.01","*:p<0.05"),text.col="red",bty="n")
if (length(mark)!=0){
for(i in 1:length(mark)){
if(!is.na(mark[i]) & mark[i]!="?"){
segments(xpos[i]-.45, ypos_1[i]+dist/2, xpos[i]-.45, max(ypos_1[i], ypos_2[i])+dist)
segments(xpos[i]+.45, ypos_2[i]+dist/2, xpos[i]+.45, max(ypos_1[i], ypos_2[i])+dist)
segments(xpos[i]-.45, max(ypos_1[i], ypos_2[i])+dist, xpos[i]-0.3, max(ypos_1[i], ypos_2[i])+dist)
segments(xpos[i]+.45, max(ypos_1[i], ypos_2[i])+dist, xpos[i]+0.3, max(ypos_1[i], ypos_2[i])+dist)
text(x=xpos[i], y=max(ypos_1[i], ypos_2[i])+dist, label=mark[i], col=cccol[1])
}
}
}
for (i in seq(n)){
text(x=i, y=bp$stats[3,i], label=length(na.omit(plot_list[[i]])), col="white",cex=0.3)
}
}
###################################################################################################
################################            READ IN DATA           ################################
###################################################################################################
M14_CleavedPer1C <- c(100.00,100,100,100,100,100,100,100)
M14_C4Per2C <- c(76.92,100,71,78,63,53,57,83)
M14_MorulaPer2C <- c(69.23,94,71,67,63,53,57,58)
M14_BlastPer2C <- c(46.15,58,46,39,37,31,30,42)
CC_CleavedPer1C <- c(100.00,100,100,100,100,100,100,100)
CC_C4Per2C <- c(75.00,90,37,67,73,50,28,56)
CC_MorulaPer2C <- c(75.00,69,37,67,73,40,25,44)
CC_BlastPer2C <- c(33.33,28,26,25,27,27,25,22)
M212_CleavedPer1C <- c(100.00,100,100,100,100,100,100.00,100.00,100,100,100.00,100,100,100.00,100,100,100,100)
M212_C4Per2C <- c(52.94,67,56,61,42,25,41.94,100.00,63,46,60.87,44,69,60.00,65,47,87,55)
M212_MorulaPer2C <- c(47.06,61,33,61,42,25,41.94,75.00,63,46,47.83,44,69,60.00,65,47,87,55)
M212_BlastPer2C <- c(35.29,45,11,39,32,0,32.26,37.50,38,8,15.22,31,39,20.00,24,26,39,18)
###################################################################################################
################################                PLOT               ################################
###################################################################################################
pdf("Fig.DevelopmentRatio.pdf", width=8, height=4)
par(mfrow=c(1,4),mar=c(6,4,4,2))
plot_list <- list(M212_CleavedPer1C,M14_CleavedPer1C,CC_CleavedPer1C)
BeeswarmSiginificancePlot(plot_list,"2-cell",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[1],blue_col[1],grey_col[1]),c(0,110))
plot_list <- list(M212_C4Per2C,M14_C4Per2C,CC_C4Per2C)
BeeswarmSiginificancePlot(plot_list,"4-cell",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[2],blue_col[2],grey_col[2]),c(0,110))
plot_list <- list(M212_MorulaPer2C,M14_MorulaPer2C,CC_MorulaPer2C)
BeeswarmSiginificancePlot(plot_list,"Morula",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[3],blue_col[3],grey_col[3]),c(0,110))
plot_list <- list(M212_BlastPer2C,M14_BlastPer2C,CC_BlastPer2C)
BeeswarmSiginificancePlot(plot_list,"Blastocyst",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[4],blue_col[4],grey_col[4]),c(0,110))
par(mfrow=c(1,4),mar=c(6,4,4,2))
plot_list <- list(M212_CleavedPer1C,M14_CleavedPer1C,CC_CleavedPer1C)
Boxplot_List(plot_list,"2-cell",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[1],blue_col[1],grey_col[1]),c(0,110))
plot_list <- list(M212_C4Per2C,M14_C4Per2C,CC_C4Per2C)
Boxplot_List(plot_list,"4-cell",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[2],blue_col[2],grey_col[2]),c(0,110))
plot_list <- list(M212_MorulaPer2C,M14_MorulaPer2C,CC_MorulaPer2C)
Boxplot_List(plot_list,"Morula",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[3],blue_col[3],grey_col[3]),c(0,110))
plot_list <- list(M212_BlastPer2C,M14_BlastPer2C,CC_BlastPer2C)
Boxplot_List(plot_list,"Blastocyst",c("M2-12h","M14h","CC"),"Ratio(%)",c(red_col[4],blue_col[4],grey_col[4]),c(0,110))
dev.off()
getwd()
?plot
random
?Random
sample(1)
?sample
runif
runif()
runif(1)
runif(2)
seq(10000,10)
seq(1,10000,10)
seq(0,10000,10)
write.table("header.txt",seq(1,10000,10),quote=T)
write.table(file="header.txt",seq(1,10000,10),quote=T)
q()
seq(-10000,10000,10)
seq(-10000,10000,20)
write.table(file="header",seq(-10000,10000,20),quote=F,col.names=F,row.names=F)
q()
setwd("/Users/chengchenzhao/OneDrive/Projects/Working/1.scMethylome/figures/SFig2")
###################################################################################################
################################     PARAMETER/FUNCTION DEFINE     ################################
###################################################################################################
# sys_argv <- commandArgs(T)
cccol <- c("#CE0013","#16557A","#C7A609","#87C232","#64C0AB","#A14C94","#15A08C","#8B7E75","#1E7CAF","#EA425F","#46489A","#E50033","#0F231F","#1187CD")
cccol50 <- c("#CE001350","#16557A50","#C7A60950","#87C23250","#00879250","#A14C9450","#15A08C50","#8B7E7550","#1E7CAF50","#EA425F50","#46489A50","#E5003350","#0F231F50","#1187CD50")
cccol05 <- c("#CE001305","#16557A05","#C7A60905","#87C23205","#00879205","#A14C9405","#15A08C05","#8B7E7505","#1E7CAF05","#EA425F05","#46489A05","#E5003305","#0F231F05","#1187CD05")
cccol80 <- c("#CE001380","#16557A80","#C7A60980","#87C23280","#64C0AB80","#A14C9480","#15A08C80","#8B7E7580","#1E7CAF80","#EA425F80","#46489A80","#E8003380","#0F231F80","#1187CD80")
library(sm)
vioplot <- function(x,...,range=1.5,h=NULL,ylim=NULL,names=NULL, horizontal=FALSE,
col="magenta", border="black", lty=1, lwd=1, rectCol="black", colMed="white", pchMed=19, at, add=FALSE, wex=1,
drawRect=TRUE)
{
# process multiple datas
datas <- list(x,...)
n <- length(datas)
if(missing(at)) at <- 1:n
# pass 1
#
# - calculate base range
# - estimate density
#
# setup parameters for density estimation
upper  <- vector(mode="numeric",length=n)
lower  <- vector(mode="numeric",length=n)
q1     <- vector(mode="numeric",length=n)
q3     <- vector(mode="numeric",length=n)
med    <- vector(mode="numeric",length=n)
base   <- vector(mode="list",length=n)
height <- vector(mode="list",length=n)
baserange <- c(Inf,-Inf)
# global args for sm.density function-call
args <- list(display="none")
if (!(is.null(h)))
args <- c(args, h=h)
for(i in 1:n) {
data<-datas[[i]]
# calculate plot parameters
#   1- and 3-quantile, median, IQR, upper- and lower-adjacent
data.min <- min(data)
data.max <- max(data)
q1[i]<-quantile(data,0.25,na.rm=TRUE)
q3[i]<-quantile(data,0.75,na.rm=TRUE)
med[i]<-median(data)
iqd <- q3[i]-q1[i]
upper[i] <- min( q3[i] + range*iqd, data.max )
lower[i] <- max( q1[i] - range*iqd, data.min )
#   strategy:
#       xmin = min(lower, data.min))
#       ymax = max(upper, data.max))
#
est.xlim <- c( min(lower[i], data.min), max(upper[i], data.max) )
# estimate density curve
smout <- do.call("sm.density", c( list(data, xlim=est.xlim), args ) )
# calculate stretch factor
#
#  the plots density heights is defined in range 0.0 ... 0.5
#  we scale maximum estimated point to 0.4 per data
#
hscale <- 0.4/max(smout$estimate) * wex
# add density curve x,y pair to lists
base[[i]]   <- smout$eval.points
height[[i]] <- smout$estimate * hscale
# calculate min,max base ranges
t <- range(base[[i]])
baserange[1] <- min(baserange[1],t[1])
baserange[2] <- max(baserange[2],t[2])
}
# pass 2
#
# - plot graphics
# setup parameters for plot
if(!add){
xlim <- if(n==1)
at + c(-.5, .5)
else
range(at) + min(diff(at))/2 * c(-1,1)
if (is.null(ylim)) {
ylim <- baserange
}
}
if (is.null(names)) {
label <- 1:n
} else {
label <- names
}
boxwidth <- 0.05 * wex
# setup plot
if(!add)
plot.new()
if(!horizontal) {
if(!add){
plot.window(xlim = xlim, ylim = ylim)
axis(2)
axis(1,at = at, label=label )
}
box()
for(i in 1:n) {
# plot left/right density curve
polygon( c(at[i]-height[[i]], rev(at[i]+height[[i]])),
c(base[[i]], rev(base[[i]])),
col = col[i], border=border, lty=lty, lwd=lwd)
if(drawRect){
# plot IQR
lines( at[c( i, i)], c(lower[i], upper[i]) ,lwd=lwd, lty=lty)
# plot 50% KI box
rect( at[i]-boxwidth/2, q1[i], at[i]+boxwidth/2, q3[i], col=rectCol)
# plot median point
points( at[i], med[i], pch=pchMed, col=colMed )
}
}
}
else {
if(!add){
plot.window(xlim = ylim, ylim = xlim)
axis(1)
axis(2,at = at, label=label )
}
box()
for(i in 1:n) {
# plot left/right density curve
polygon( c(base[[i]], rev(base[[i]])),
c(at[i]-height[[i]], rev(at[i]+height[[i]])),
col = col[i], border=border, lty=lty, lwd=lwd)
if(drawRect){
# plot IQR
lines( c(lower[i], upper[i]), at[c(i,i)] ,lwd=lwd, lty=lty)
# plot 50% KI box
rect( q1[i], at[i]-boxwidth/2, q3[i], at[i]+boxwidth/2,  col=rectCol)
# plot median point
points( med[i], at[i], pch=pchMed, col=colMed )
}
}
}
invisible (list( upper=upper, lower=lower, median=med, q1=q1, q3=q3))
}
library(ineq)
BinaryHeterogeneity <- function(x){
cutoff_1 <- 1/8
cutoff_2 <- 3/8
cutoff_3 <- 5/8
cutoff_4 <- 7/8
a1 <- length(which(x<=cutoff_1))
a2 <- length(which(x>cutoff_1 & x<=cutoff_2))
a3 <- length(which(x>cutoff_2 & x<=cutoff_3))
a4 <- length(which(x>cutoff_3 & x<=cutoff_4))
a5 <- length(which(x>cutoff_4))
if (a1+a2+a3+a4+a5 <= 2){
return(NA)
}else{
total <- length(x)
return(1-Gini(c(a1/total,a2/total,a3/total,a4/total,a5/total),corr=T))
}
}
MethylationRatio2Class <- function(x){
cutoff_1 <- 1/8
cutoff_2 <- 3/8
cutoff_3 <- 5/8
cutoff_4 <- 7/8
x[x<=cutoff_1] <- 0
x[x>cutoff_1 & x<=cutoff_2] <- 1/4
x[x>cutoff_2 & x<=cutoff_3] <- 1/2
x[x>cutoff_3 & x<=cutoff_4] <- 3/4
x[x>cutoff_4] <- 1
return(x)
}
alldata <- read.table("../Data/hg_MethylationRatio.txt",header=T,row.names=1)
Methylation <- alldata[,c("hg_8C_9_1","hg_8C_9_2","hg_8C_9_3","hg_8C_9_4","hg_8C_9_5","hg_8C_9_6","hg_8C_9_7","hg_8C_9_8")]
out_name <- "SFig2"
Methylation_class <- apply(Methylation,2,MethylationRatio2Class)
Methylation_ratio <- apply(Methylation,1,mean,na.rm=T)
Methylation_heter <- apply(Methylation,1,BinaryHeterogeneity)
pdf(paste(out_name,"B.MethylationRatioHeterogeneityCorrelation.pdf",sep=""),width=3.6,height=4)
h1_gene <- which(Methylation_heter<0.2 & Methylation_heter>=0)
h2_gene <- which(Methylation_heter<0.4 & Methylation_heter>=0.2)
h3_gene <- which(Methylation_heter<0.6 & Methylation_heter>=0.4)
h4_gene <- which(Methylation_heter<0.8 & Methylation_heter>=0.6)
h5_gene <- which(Methylation_heter<=1 & Methylation_heter>=0.8)
vioplot(Methylation_ratio[h1_gene],Methylation_ratio[h2_gene],Methylation_ratio[h3_gene],Methylation_ratio[h4_gene],Methylation_ratio[h5_gene],col=cccol80[1:5],border=cccol[8],lwd=2, rectCol="black", colMed="white",names=c(0.2,0.4,0.6,0.8,1.0),horizontal=T);box(lwd=2)
dev.off()
pdf(paste(out_name,"C.MeanDistribution.pdf",sep=""),width=3.6,height=4)
hist(Methylation_ratio,breaks=10,col=cccol[8],border="white",main="Average methylation ratio",xlab="Methylation Ratio");box(lwd=2)
dev.off()
pdf(paste(out_name,"D.BinaryHeterogeneityDistribution.pdf",sep=""),width=3.6,height=4)
hist(Methylation_heter,breaks=10,col=cccol[9],border="white",main="Methylation heterogeneity",xlab="Methylation Heterogeneity");box(lwd=2)
dev.off()
plot(Methylation_ratio,Methylation_heter,type="p",pch=".",ylim=c(0,1),xlim=c(0,1),col=cccol[7],main="Ratio & Heterogeneity",xlab="Methylation Ratio",ylab="Methylation Heterogeneity");box(lwd=2)
boxplot(Methylation_ratio[h1_gene],Methylation_ratio[h2_gene],Methylation_ratio[h3_gene],Methylation_ratio[h4_gene],Methylation_ratio[h5_gene],col=cccol80[1:5],border=cccol[8],lwd=2, rectCol="black", colMed="white",names=c(0.2,0.4,0.6,0.8,1.0),horizontal=T);box(lwd=2)
pdf(paste(out_name,"B.MethylationRatioHeterogeneityCorrelation.pdf",sep=""),width=3.6,height=4)
plot(Methylation_ratio,Methylation_heter,type="p",pch=".",ylim=c(0,1),xlim=c(0,1),col=cccol[7],main="Ratio vs. Heterogeneity",xlab="Average methylation level",ylab="Methylation heterogeneity score");box(lwd=2)
legend("topright",c(paste("cor =",round(cor(Methylation_ratio,Methylation_heter,use="pair"),2))),bty="n")
# dev.off()
h1_gene <- which(Methylation_heter<0.2 & Methylation_heter>=0)
h2_gene <- which(Methylation_heter<0.4 & Methylation_heter>=0.2)
h3_gene <- which(Methylation_heter<0.6 & Methylation_heter>=0.4)
h4_gene <- which(Methylation_heter<0.8 & Methylation_heter>=0.6)
h5_gene <- which(Methylation_heter<=1 & Methylation_heter>=0.8)
vioplot(Methylation_ratio[h1_gene],Methylation_ratio[h2_gene],Methylation_ratio[h3_gene],Methylation_ratio[h4_gene],Methylation_ratio[h5_gene],col=cccol80[1:5],border=cccol[8],lwd=2, rectCol="black", colMed="white",names=c(0.2,0.4,0.6,0.8,1.0),horizontal=T);box(lwd=2)
dev.off()
pdf(paste(out_name,"B.MethylationRatioHeterogeneityCorrelation.pdf",sep=""),width=3.6,height=4)
plot(Methylation_ratio,Methylation_heter,type="p",pch=".",ylim=c(0,1),xlim=c(0,1),col=cccol[7],main="Ratio vs. Heterogeneity",xlab="Average methylation level",ylab="Methylation heterogeneity score");box(lwd=2)
# legend("topright",c(paste("cor =",round(cor(Methylation_ratio,Methylation_heter,use="pair"),2))),bty="n")
# dev.off()
h1_gene <- which(Methylation_heter<0.2 & Methylation_heter>=0)
h2_gene <- which(Methylation_heter<0.4 & Methylation_heter>=0.2)
h3_gene <- which(Methylation_heter<0.6 & Methylation_heter>=0.4)
h4_gene <- which(Methylation_heter<0.8 & Methylation_heter>=0.6)
h5_gene <- which(Methylation_heter<=1 & Methylation_heter>=0.8)
vioplot(Methylation_ratio[h1_gene],Methylation_ratio[h2_gene],Methylation_ratio[h3_gene],Methylation_ratio[h4_gene],Methylation_ratio[h5_gene],col=cccol80[1:5],border=cccol[8],lwd=2, rectCol="black", colMed="white",names=c(0.2,0.4,0.6,0.8,1.0),horizontal=T);box(lwd=2)
dev.off()
pdf(paste(out_name,"B.MethylationRatioHeterogeneityCorrelation.pdf",sep=""),width=3.6,height=4)
plot(Methylation_ratio,Methylation_heter,type="p",pch=".",ylim=c(0,1),xlim=c(0,1),col=cccol[7],main="",xlab="Average methylation level",ylab="Methylation heterogeneity score");box(lwd=2)
# legend("topright",c(paste("cor =",round(cor(Methylation_ratio,Methylation_heter,use="pair"),2))),bty="n")
# dev.off()
h1_gene <- which(Methylation_heter<0.2 & Methylation_heter>=0)
h2_gene <- which(Methylation_heter<0.4 & Methylation_heter>=0.2)
h3_gene <- which(Methylation_heter<0.6 & Methylation_heter>=0.4)
h4_gene <- which(Methylation_heter<0.8 & Methylation_heter>=0.6)
h5_gene <- which(Methylation_heter<=1 & Methylation_heter>=0.8)
vioplot(Methylation_ratio[h1_gene],Methylation_ratio[h2_gene],Methylation_ratio[h3_gene],Methylation_ratio[h4_gene],Methylation_ratio[h5_gene],col=cccol80[1:5],border=cccol[8],lwd=2, rectCol="black", colMed="white",names=c(0.2,0.4,0.6,0.8,1.0),horizontal=T);box(lwd=2)
dev.off()
